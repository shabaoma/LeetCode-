{
    "Daily Temperatures": [
      "hash-table",
      "stack"
    ],
    "Palindromic Substrings": [
      "string",
      "dynamic-programming"
    ],
    "Task Scheduler": [
      "array",
      "greedy",
      "queue"
    ],
    "Merge Two Binary Trees": [
      "tree"
    ],
    "Shortest Unsorted Continuous Subarray": [
      "array"
    ],
    "Subarray Sum Equals K": [
      "array",
      "hash-table"
    ],
    "Diameter of Binary Tree": [
      "tree"
    ],
    "Target Sum": [
      "dynamic-programming",
      "depth-first-search"
    ],
    "Find All Numbers Disappeared in an Array": [
      "array"
    ],
    "Find All Anagrams in a String": [
      "hash-table"
    ],
    "Path Sum III": [
      "tree"
    ],
    "Partition Equal Subset Sum": [
      "dynamic-programming"
    ],
    "Queue Reconstruction by Height": [
      "greedy"
    ],
    "Decode String": [
      "stack",
      "depth-first-search"
    ],
    "Top K Frequent Elements": [
      "hash-table",
      "heap"
    ],
    "Counting Bits": [
      "dynamic-programming",
      "bit-manipulation"
    ],
    "House Robber III": [
      "tree",
      "depth-first-search"
    ],
    "Coin Change": [
      "dynamic-programming"
    ],
    "Burst Balloons": [
      "divide-and-conquer",
      "dynamic-programming"
    ],
    "Best Time to Buy and Sell Stock with Cooldown": [
      "dynamic-programming"
    ],
    "Remove Invalid Parentheses": [
      "depth-first-search",
      "breadth-first-search"
    ],
    "Longest Increasing Subsequence": [
      "binary-search",
      "dynamic-programming"
    ],
    "Serialize and Deserialize Binary Tree": [
      "tree",
      "design"
    ],
    "Find Median from Data Stream": [
      "heap",
      "design"
    ],
    "Find the Duplicate Number": [
      "array",
      "two-pointers",
      "binary-search"
    ],
    "Move Zeroes": [
      "array",
      "two-pointers"
    ],
    "Perfect Squares": [
      "math",
      "dynamic-programming",
      "breadth-first-search"
    ],
    "Meeting Rooms II": [
      "heap",
      "greedy",
      "sort"
    ],
    "Search a 2D Matrix II": [
      "binary-search",
      "divide-and-conquer"
    ],
    "Sliding Window Maximum": [
      "heap",
      "sliding-window"
    ],
    "Product of Array Except Self": [
      "array"
    ],
    "Lowest Common Ancestor of a Binary Tree": [
      "tree"
    ],
    "Palindrome Linked List": [
      "linked-list",
      "two-pointers"
    ],
    "Invert Binary Tree": [
      "tree"
    ],
    "Maximal Square": [
      "dynamic-programming"
    ],
    "Kth Largest Element in an Array": [
      "divide-and-conquer",
      "heap"
    ],
    "Implement Trie (Prefix Tree)": [
      "design",
      "trie"
    ],
    "Course Schedule": [
      "depth-first-search",
      "breadth-first-search",
      "graph",
      "topological-sort"
    ],
    "Reverse Linked List": [
      "linked-list"
    ],
    "Number of Islands": [
      "depth-first-search",
      "breadth-first-search",
      "union-find"
    ],
    "House Robber": [
      "dynamic-programming"
    ],
    "Majority Element": [
      "array",
      "divide-and-conquer",
      "bit-manipulation"
    ],
    "Intersection of Two Linked Lists": [
      "linked-list"
    ],
    "Min Stack": [
      "stack",
      "design"
    ],
    "Maximum Product Subarray": [
      "array",
      "dynamic-programming"
    ],
    "Sort List": [
      "linked-list",
      "sort"
    ],
    "LRU Cache": [
      "design"
    ],
    "Linked List Cycle II": [
      "linked-list",
      "two-pointers"
    ],
    "Linked List Cycle": [
      "linked-list",
      "two-pointers"
    ],
    "Word Break": [
      "dynamic-programming"
    ],
    "Copy List with Random Pointer": [
      "hash-table",
      "linked-list"
    ],
    "Single Number": [
      "hash-table",
      "bit-manipulation"
    ],
    "Longest Consecutive Sequence": [
      "array",
      "union-find"
    ],
    "Binary Tree Maximum Path Sum": [
      "tree",
      "depth-first-search"
    ],
    "Best Time to Buy and Sell Stock": [
      "array",
      "dynamic-programming"
    ],
    "Flatten Binary Tree to Linked List": [
      "tree",
      "depth-first-search"
    ],
    "Construct Binary Tree from Preorder and Inorder Traversal": [
      "array",
      "tree",
      "depth-first-search"
    ],
    "Maximum Depth of Binary Tree": [
      "tree",
      "depth-first-search"
    ],
    "Binary Tree Level Order Traversal": [
      "tree",
      "breadth-first-search"
    ],
    "Symmetric Tree": [
      "tree",
      "depth-first-search",
      "breadth-first-search"
    ],
    "Validate Binary Search Tree": [
      "tree",
      "depth-first-search"
    ],
    "Unique Binary Search Trees": [
      "dynamic-programming",
      "tree"
    ],
    "Binary Tree Inorder Traversal": [
      "hash-table",
      "stack",
      "tree"
    ],
    "Maximal Rectangle": [
      "array",
      "hash-table",
      "dynamic-programming",
      "stack"
    ],
    "Largest Rectangle in Histogram": [
      "array",
      "stack"
    ],
    "Word Search": [
      "array",
      "backtracking"
    ],
    "Subsets": [
      "array",
      "backtracking",
      "bit-manipulation"
    ],
    "Minimum Window Substring": [
      "hash-table",
      "two-pointers",
      "string",
      "sliding-window"
    ],
    "Sort Colors": [
      "array",
      "two-pointers",
      "sort"
    ],
    "Edit Distance": [
      "string",
      "dynamic-programming"
    ],
    "Climbing Stairs": [
      "dynamic-programming"
    ],
    "Minimum Path Sum": [
      "array",
      "dynamic-programming"
    ],
    "Unique Paths": [
      "array",
      "dynamic-programming"
    ],
    "Merge Intervals": [
      "array",
      "sort"
    ],
    "Jump Game": [
      "array",
      "greedy"
    ],
    "Maximum Subarray": [
      "array",
      "divide-and-conquer",
      "dynamic-programming"
    ],
    "Group Anagrams": [
      "hash-table",
      "string"
    ],
    "Rotate Image": [
      "array"
    ],
    "Permutations": [
      "backtracking"
    ],
    "Jump Game II": [
      "array",
      "greedy"
    ],
    "Trapping Rain Water": [
      "array",
      "two-pointers",
      "stack"
    ],
    "First Missing Positive": [
      "array"
    ],
    "Combination Sum": [
      "array",
      "backtracking"
    ],
    "Find First and Last Position of Element in Sorted Array": [
      "array",
      "binary-search"
    ],
    "Search in Rotated Sorted Array": [
      "array",
      "binary-search"
    ],
    "Longest Valid Parentheses": [
      "string",
      "dynamic-programming"
    ],
    "Merge k Sorted Lists": [
      "linked-list",
      "divide-and-conquer",
      "heap"
    ],
    "Generate Parentheses": [
      "string",
      "backtracking"
    ],
    "Merge Two Sorted Lists": [
      "linked-list"
    ],
    "Valid Parentheses": [
      "string",
      "stack"
    ],
    "Remove Nth Node From End of List": [
      "linked-list",
      "two-pointers"
    ],
    "Letter Combinations of a Phone Number": [
      "string",
      "backtracking"
    ],
    "3Sum": [
      "array",
      "two-pointers"
    ],
    "Container With Most Water": [
      "array",
      "two-pointers"
    ],
    "Regular Expression Matching": [
      "string",
      "dynamic-programming",
      "backtracking"
    ],
    "Longest Palindromic Substring": [
      "string",
      "dynamic-programming"
    ],
    "Median of Two Sorted Arrays": [
      "array",
      "binary-search",
      "divide-and-conquer"
    ],
    "Longest Substring Without Repeating Characters": [
      "hash-table",
      "two-pointers",
      "string",
      "sliding-window"
    ],
    "Add Two Numbers": [
      "linked-list",
      "math"
    ],
    "Two Sum": [
      "array",
      "hash-table"
    ]
  }